{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aco\\\\Desktop\\\\imdb_clone\\\\pages\\\\top-rated.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Layout from '../components/Layout';\nimport { API } from '../config/keys';\nimport Movies from '../components/movies/Movies';\nimport axios from 'axios';\n\nconst TopRated = props => {\n  const {\n    0: search,\n    1: setSearch\n  } = useState('');\n  const {\n    0: popular,\n    1: setPopular\n  } = useState(''); // console.log(props.topRated)\n\n  const {\n    0: content,\n    1: setContent\n  } = useState('');\n  const {\n    0: page,\n    1: setPage\n  } = useState(1);\n\n  const showMore = e => {\n    const number = page + 1;\n    axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${API}&language=en-US&page=${number}`).then(res => {\n      setContent({\n        results: res.data.results\n      });\n    }).catch(err => {\n      setContent('');\n    });\n    setPage(number);\n  };\n\n  const onChange = e => {\n    setSearch(e.target.value);\n\n    if (e.target.value == '') {\n      axios.get(`https://api.themoviedb.org/3/movie/top_rated?api_key=${API}&language=en-US&page=1`).then(res => {\n        setPopular(res.data);\n      }).catch(err => {\n        setPopular('');\n      });\n      return;\n    }\n\n    if (search.length > 0) {\n      axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API}&language=en-US&page=1&include_adult=false&query=${search}`).then(res => {\n        setPopular(res.data);\n      }).catch(err => {\n        setPopular('');\n      });\n    }\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    className: \"type-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Top Rated Movies\"), __jsx(\"div\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    className: \"search-input\",\n    type: \"text\",\n    placeholder: \"Search\",\n    value: search,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  })), topRated !== '' ? __jsx(Movies, {\n    movies: topRated.results,\n    flag: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }) : __jsx(Movies, {\n    movies: props.topRated,\n    flag: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }), content !== '' ? __jsx(Movies, {\n    movies: content.results,\n    flag: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }) : null, search === '' ? __jsx(\"div\", {\n    className: \"button-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, __jsx(\"button\", {\n    className: \"more-button\",\n    onClick: showMore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, \"View More\")) : null));\n};\n\nTopRated.getInitialProps = async function () {\n  const res = await fetch(`https://api.themoviedb.org/3/movie/top_rated?api_key=${API}&language=en-US&page=1`);\n  const topRated = await res.json();\n  return {\n    topRated: topRated.results\n  };\n};\n\nexport default TopRated;","map":{"version":3,"sources":["C:/Users/Aco/Desktop/imdb_clone/pages/top-rated.js"],"names":["useState","Layout","API","Movies","axios","TopRated","props","search","setSearch","popular","setPopular","content","setContent","page","setPage","showMore","e","number","get","then","res","results","data","catch","err","onChange","target","value","length","topRated","getInitialProps","fetch","json"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAExB,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACS,OAAD;AAAA,OAAUC;AAAV,MAAwBV,QAAQ,CAAC,EAAD,CAAtC,CAHwB,CAIxB;;AAEA,QAAM;AAAA,OAACW,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACa,IAAD;AAAA,OAAOC;AAAP,MAAkBd,QAAQ,CAAC,CAAD,CAAhC;;AAEA,QAAMe,QAAQ,GAAGC,CAAC,IAAI;AAElB,UAAMC,MAAM,GAAGJ,IAAI,GAAG,CAAtB;AAEAT,IAAAA,KAAK,CAACc,GAAN,CAAW,sDAAqDhB,GAAI,wBAAuBe,MAAO,EAAlG,EACKE,IADL,CACUC,GAAG,IAAI;AACTR,MAAAA,UAAU,CAAC;AACPS,QAAAA,OAAO,EAAED,GAAG,CAACE,IAAJ,CAASD;AADX,OAAD,CAAV;AAIH,KANL,EAOKE,KAPL,CAOWC,GAAG,IAAI;AACVZ,MAAAA,UAAU,CAAC,EAAD,CAAV;AACH,KATL;AAUAE,IAAAA,OAAO,CAACG,MAAD,CAAP;AAEH,GAhBD;;AAkBA,QAAMQ,QAAQ,GAAGT,CAAC,IAAI;AAClBR,IAAAA,SAAS,CAACQ,CAAC,CAACU,MAAF,CAASC,KAAV,CAAT;;AAEA,QAAIX,CAAC,CAACU,MAAF,CAASC,KAAT,IAAkB,EAAtB,EAA0B;AACtBvB,MAAAA,KAAK,CAACc,GAAN,CAAW,wDAAuDhB,GAAI,wBAAtE,EACKiB,IADL,CACUC,GAAG,IAAI;AACTV,QAAAA,UAAU,CAACU,GAAG,CAACE,IAAL,CAAV;AACH,OAHL,EAIKC,KAJL,CAIWC,GAAG,IAAI;AACVd,QAAAA,UAAU,CAAC,EAAD,CAAV;AACH,OANL;AAQA;AACH;;AAED,QAAIH,MAAM,CAACqB,MAAP,GAAgB,CAApB,EAAuB;AAEnBxB,MAAAA,KAAK,CAACc,GAAN,CAAW,qDAAoDhB,GAAI,oDAAmDK,MAAO,EAA7H,EACKY,IADL,CACUC,GAAG,IAAI;AACTV,QAAAA,UAAU,CAACU,GAAG,CAACE,IAAL,CAAV;AACH,OAHL,EAIKC,KAJL,CAIWC,GAAG,IAAI;AACVd,QAAAA,UAAU,CAAC,EAAD,CAAV;AACH,OANL;AAQH;AAEJ,GA3BD;;AA6BA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC,cAAjB;AAAgC,IAAA,IAAI,EAAC,MAArC;AAA4C,IAAA,WAAW,EAAC,QAAxD;AAAiE,IAAA,KAAK,EAAEH,MAAxE;AAAgF,IAAA,QAAQ,EAAEkB,QAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,EAKKI,QAAQ,KAAK,EAAb,GACG,MAAC,MAAD;AAAQ,IAAA,MAAM,EAAEA,QAAQ,CAACR,OAAzB;AAAkC,IAAA,IAAI,EAAE,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,GAGO,MAAC,MAAD;AAAQ,IAAA,MAAM,EAAEf,KAAK,CAACuB,QAAtB;AAAgC,IAAA,IAAI,EAAE,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARZ,EAYKlB,OAAO,KAAK,EAAZ,GACG,MAAC,MAAD;AAAQ,IAAA,MAAM,EAAEA,OAAO,CAACU,OAAxB;AAAiC,IAAA,IAAI,EAAE,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,GAEG,IAdR,EAiBKd,MAAM,KAAK,EAAX,GACG;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAC,aAAlB;AAAgC,IAAA,OAAO,EAAEQ,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CADH,GAIG,IArBR,CADJ,CADJ;AA4BH,CApFD;;AAsFAV,QAAQ,CAACyB,eAAT,GAA2B,kBAAkB;AACzC,QAAMV,GAAG,GAAG,MAAMW,KAAK,CAAE,wDAAuD7B,GAAI,wBAA7D,CAAvB;AACA,QAAM2B,QAAQ,GAAG,MAAMT,GAAG,CAACY,IAAJ,EAAvB;AAEA,SAAO;AACHH,IAAAA,QAAQ,EAAEA,QAAQ,CAACR;AADhB,GAAP;AAGH,CAPD;;AASA,eAAehB,QAAf","sourcesContent":["import { useState } from 'react';\r\nimport Layout from '../components/Layout';\r\nimport { API } from '../config/keys';\r\nimport Movies from '../components/movies/Movies';\r\nimport axios from 'axios';\r\n\r\nconst TopRated = (props) => {\r\n\r\n    const [search, setSearch] = useState('');\r\n    const [popular, setPopular] = useState('');\r\n    // console.log(props.topRated)\r\n\r\n    const [content, setContent] = useState('');\r\n    const [page, setPage] = useState(1);\r\n\r\n    const showMore = e => {\r\n\r\n        const number = page + 1;\r\n\r\n        axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${API}&language=en-US&page=${number}`)\r\n            .then(res => {\r\n                setContent({\r\n                    results: res.data.results\r\n                });\r\n\r\n            })\r\n            .catch(err => {\r\n                setContent('');\r\n            })\r\n        setPage(number);\r\n\r\n    }\r\n\r\n    const onChange = e => {\r\n        setSearch(e.target.value);\r\n\r\n        if (e.target.value == '') {\r\n            axios.get(`https://api.themoviedb.org/3/movie/top_rated?api_key=${API}&language=en-US&page=1`)\r\n                .then(res => {\r\n                    setPopular(res.data);\r\n                })\r\n                .catch(err => {\r\n                    setPopular('');\r\n                })\r\n\r\n            return;\r\n        }\r\n\r\n        if (search.length > 0) {\r\n\r\n            axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API}&language=en-US&page=1&include_adult=false&query=${search}`)\r\n                .then(res => {\r\n                    setPopular(res.data);\r\n                })\r\n                .catch(err => {\r\n                    setPopular('');\r\n                });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <div>\r\n                <h3 className=\"type-heading\">Top Rated Movies</h3>\r\n                <div className=\"search\">\r\n                    <input className=\"search-input\" type=\"text\" placeholder=\"Search\" value={search} onChange={onChange} />\r\n                </div>\r\n                {topRated !== '' ? (\r\n                    <Movies movies={topRated.results} flag={true}></Movies>\r\n                ) : (\r\n                        <Movies movies={props.topRated} flag={false}></Movies>\r\n                    )}\r\n\r\n\r\n                {content !== '' ? (\r\n                    <Movies movies={content.results} flag={false}></Movies>\r\n                ) : null\r\n                }\r\n\r\n                {search === '' ? (\r\n                    <div className=\"button-center\">\r\n                        <button className=\"more-button\" onClick={showMore}>View More</button>\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n        </Layout>\r\n    )\r\n\r\n}\r\n\r\nTopRated.getInitialProps = async function () {\r\n    const res = await fetch(`https://api.themoviedb.org/3/movie/top_rated?api_key=${API}&language=en-US&page=1`);\r\n    const topRated = await res.json();\r\n\r\n    return {\r\n        topRated: topRated.results\r\n    }\r\n}\r\n\r\nexport default TopRated;"]},"metadata":{},"sourceType":"module"}