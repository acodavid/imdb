{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aco\\\\Desktop\\\\imdb_clone\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { API } from '../config/keys';\nimport Layout from '../components/Layout';\nimport Movies from '../components/movies/Movies';\nimport axios from 'axios';\n\nconst App = props => {\n  const {\n    0: number,\n    1: setNumber\n  } = useState(1);\n  const {\n    0: search,\n    1: setSearch\n  } = useState('');\n  const {\n    0: popular,\n    1: setPopular\n  } = useState(''); //console.log(props.popular)\n\n  const onChange = e => {\n    setSearch(e.target.value);\n\n    if (search.length > 0) {\n      axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API}&language=en-US&page=1&include_adult=false&query=${search}`).then(res => {\n        setPopular(res.data);\n      }).catch(err => {\n        setPopular('');\n      });\n    }\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    className: \"type-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Most Popular Movies\"), __jsx(\"input\", {\n    style: {\n      margin: '10px'\n    },\n    className: \"search-input\",\n    type: \"text\",\n    placeholder: \"Search\",\n    value: search,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), popular !== '' ? __jsx(Movies, {\n    movies: popular,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }) : __jsx(Movies, {\n    movies: props.popular,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  })));\n};\n\nApp.getInitialProps = async function () {\n  const res = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${API}&language=en-US&page=1`);\n  const popular = await res.json();\n  return {\n    popular: popular.results\n  };\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Aco/Desktop/imdb_clone/pages/index.js"],"names":["useState","API","Layout","Movies","axios","App","props","number","setNumber","search","setSearch","popular","setPopular","onChange","e","target","value","length","get","then","res","data","catch","err","margin","getInitialProps","fetch","json","results"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAEnB,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBR,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM;AAAA,OAACS,MAAD;AAAA,OAASC;AAAT,MAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACW,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,CAAC,EAAD,CAAtC,CAJmB,CAKnB;;AAEA,QAAMa,QAAQ,GAAGC,CAAC,IAAI;AAClBJ,IAAAA,SAAS,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;;AAEA,QAAIP,MAAM,CAACQ,MAAP,GAAgB,CAApB,EAAuB;AAEnBb,MAAAA,KAAK,CAACc,GAAN,CAAW,qDAAoDjB,GAAI,oDAAmDQ,MAAO,EAA7H,EACKU,IADL,CACUC,GAAG,IAAI;AACTR,QAAAA,UAAU,CAACQ,GAAG,CAACC,IAAL,CAAV;AACH,OAHL,EAIKC,KAJL,CAIWC,GAAG,IAAI;AACVX,QAAAA,UAAU,CAAC,EAAD,CAAV;AACH,OANL;AAQH;AAEJ,GAfD;;AAiBA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI;AAAO,IAAA,KAAK,EAAE;AAAEY,MAAAA,MAAM,EAAE;AAAV,KAAd;AAAkC,IAAA,SAAS,EAAC,cAA5C;AAA2D,IAAA,IAAI,EAAC,MAAhE;AAAuE,IAAA,WAAW,EAAC,QAAnF;AAA4F,IAAA,KAAK,EAAEf,MAAnG;AAA2G,IAAA,QAAQ,EAAEI,QAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKF,OAAO,KAAK,EAAZ,GACG,MAAC,MAAD;AAAQ,IAAA,MAAM,EAAEA,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,GAGO,MAAC,MAAD;AAAQ,IAAA,MAAM,EAAEL,KAAK,CAACK,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANZ,CADJ,CADJ;AAcH,CAtCD;;AAwCAN,GAAG,CAACoB,eAAJ,GAAsB,kBAAkB;AACpC,QAAML,GAAG,GAAG,MAAMM,KAAK,CAAE,sDAAqDzB,GAAI,wBAA3D,CAAvB;AACA,QAAMU,OAAO,GAAG,MAAMS,GAAG,CAACO,IAAJ,EAAtB;AAEA,SAAO;AACHhB,IAAAA,OAAO,EAAEA,OAAO,CAACiB;AADd,GAAP;AAGH,CAPD;;AASA,eAAevB,GAAf","sourcesContent":["import { useState } from 'react';\r\nimport { API } from '../config/keys';\r\nimport Layout from '../components/Layout';\r\nimport Movies from '../components/movies/Movies';\r\nimport axios from 'axios';\r\n\r\nconst App = (props) => {\r\n\r\n    const [number, setNumber] = useState(1);\r\n    const [search, setSearch] = useState('');\r\n    const [popular, setPopular] = useState('');\r\n    //console.log(props.popular)\r\n\r\n    const onChange = e => {\r\n        setSearch(e.target.value);\r\n\r\n        if (search.length > 0) {\r\n\r\n            axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API}&language=en-US&page=1&include_adult=false&query=${search}`)\r\n                .then(res => {\r\n                    setPopular(res.data);\r\n                })\r\n                .catch(err => {\r\n                    setPopular('');\r\n                });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <div>\r\n                <h3 className=\"type-heading\">Most Popular Movies</h3>\r\n                <input style={{ margin: '10px' }} className=\"search-input\" type=\"text\" placeholder=\"Search\" value={search} onChange={onChange} />\r\n                {popular !== '' ? (\r\n                    <Movies movies={popular}></Movies>\r\n                ) : (\r\n                        <Movies movies={props.popular}></Movies>\r\n                    )}\r\n\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nApp.getInitialProps = async function () {\r\n    const res = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${API}&language=en-US&page=1`);\r\n    const popular = await res.json();\r\n\r\n    return {\r\n        popular: popular.results\r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}