{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Aco\\\\Desktop\\\\imdb_clone\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { API } from '../config/keys';\nimport Layout from '../components/Layout';\nimport Movies from '../components/movies/Movies';\nimport axios from 'axios';\n\nvar App = function App(props) {\n  _s();\n\n  var _useState = useState(''),\n      search = _useState[0],\n      setSearch = _useState[1];\n\n  var _useState2 = useState(''),\n      popular = _useState2[0],\n      setPopular = _useState2[1];\n\n  var _useState3 = useState(''),\n      content = _useState3[0],\n      setContent = _useState3[1];\n\n  var _useState4 = useState(1),\n      page = _useState4[0],\n      setPage = _useState4[1];\n\n  var _useState5 = useState(0),\n      arrayNumber = _useState5[0],\n      setarrayNumber = _useState5[1]; //console.log(props.popular)\n\n\n  var showMore = function showMore(e) {\n    var number = page + 1;\n    axios.get(\"https://api.themoviedb.org/3/movie/popular?api_key=\".concat(API, \"&language=en-US&page=\").concat(number)).then(function (res) {\n      setContent({\n        results: res.data.results\n      });\n    })[\"catch\"](function (err) {\n      setContent('');\n    });\n    setPage(number);\n  };\n\n  var onChange = function onChange(e) {\n    setSearch(e.target.value);\n\n    if (e.target.value == '') {\n      axios.get(\"https://api.themoviedb.org/3/movie/popular?api_key=\".concat(API, \"&language=en-US&page=1\")).then(function (res) {\n        setPopular(res.data);\n      })[\"catch\"](function (err) {\n        setPopular('');\n      });\n      return;\n    }\n\n    if (search.length > 0) {\n      axios.get(\"https://api.themoviedb.org/3/search/movie?api_key=\".concat(API, \"&language=en-US&page=1&include_adult=false&query=\").concat(search)).then(function (res) {\n        // const sorted = res.data.results.sort(function (a, b) {\n        //     return a.vote_average - b.vote_average;\n        // })\n        setPopular(res.data);\n      })[\"catch\"](function (err) {\n        setPopular('');\n      });\n    }\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    className: \"type-heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"Most Popular Movies\"), __jsx(\"div\", {\n    className: \"search\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    className: \"search-input\",\n    type: \"text\",\n    placeholder: \"Search\",\n    value: search,\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  })), popular !== '' ? __jsx(Movies, {\n    movies: popular.results,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }) : __jsx(Movies, {\n    movies: props.popular,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }), content !== '' ? __jsx(Movies, {\n    movies: content.results,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }) : null, search === '' ? __jsx(\"div\", {\n    className: \"button-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, __jsx(\"button\", {\n    className: \"more-button\",\n    onClick: showMore,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, \"View More\")) : null));\n};\n\n_s(App, \"eUR3jX3LYEK+HKpqgRL42etTusk=\");\n\n_c = App;\nApp.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, popular;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(\"https://api.themoviedb.org/3/movie/popular?api_key=\".concat(API, \"&language=en-US&page=1\"));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          popular = _context.sent;\n          return _context.abrupt(\"return\", {\n            popular: popular.results\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Aco/Desktop/imdb_clone/pages/index.js"],"names":["useState","API","Layout","Movies","axios","App","props","search","setSearch","popular","setPopular","content","setContent","page","setPage","arrayNumber","setarrayNumber","showMore","e","number","get","then","res","results","data","err","onChange","target","value","length","getInitialProps","fetch","json"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { API } from '../config/keys';\r\nimport Layout from '../components/Layout';\r\nimport Movies from '../components/movies/Movies';\r\nimport axios from 'axios';\r\n\r\nconst App = (props) => {\r\n\r\n    const [search, setSearch] = useState('');\r\n    const [popular, setPopular] = useState('');\r\n\r\n    const [content, setContent] = useState('');\r\n    const [page, setPage] = useState(1);\r\n    const [arrayNumber, setarrayNumber] = useState(0);\r\n    //console.log(props.popular)\r\n\r\n    const showMore = e => {\r\n\r\n        const number = page + 1;\r\n\r\n        axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${API}&language=en-US&page=${number}`)\r\n            .then(res => {\r\n                setContent({\r\n                    results: res.data.results\r\n                });\r\n\r\n            })\r\n            .catch(err => {\r\n                setContent('');\r\n            })\r\n        setPage(number);\r\n\r\n    }\r\n\r\n    const onChange = e => {\r\n        setSearch(e.target.value);\r\n\r\n        if (e.target.value == '') {\r\n            axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${API}&language=en-US&page=1`)\r\n                .then(res => {\r\n                    setPopular(res.data);\r\n                })\r\n                .catch(err => {\r\n                    setPopular('');\r\n                })\r\n\r\n            return;\r\n        }\r\n\r\n\r\n        if (search.length > 0) {\r\n\r\n            axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API}&language=en-US&page=1&include_adult=false&query=${search}`)\r\n                .then(res => {\r\n\r\n                    // const sorted = res.data.results.sort(function (a, b) {\r\n                    //     return a.vote_average - b.vote_average;\r\n                    // })\r\n\r\n                    setPopular(res.data);\r\n                })\r\n                .catch(err => {\r\n                    setPopular('');\r\n                });\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Layout>\r\n            <div>\r\n\r\n                <h3 className=\"type-heading\">Most Popular Movies</h3>\r\n\r\n                <div className=\"search\">\r\n                    <input className=\"search-input\" type=\"text\" placeholder=\"Search\" value={search} onChange={onChange} />\r\n                </div>\r\n\r\n\r\n\r\n                {popular !== '' ? (\r\n                    <Movies movies={popular.results}></Movies>\r\n                ) : (\r\n                        <Movies movies={props.popular}></Movies>\r\n                    )}\r\n\r\n\r\n                {content !== '' ? (\r\n                    <Movies movies={content.results}></Movies>\r\n                ) : null\r\n                }\r\n\r\n                {search === '' ? (\r\n                    <div className=\"button-center\">\r\n                        <button className=\"more-button\" onClick={showMore}>View More</button>\r\n                    </div>\r\n                ) : null}\r\n\r\n\r\n\r\n\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nApp.getInitialProps = async function () {\r\n    const res = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${API}&language=en-US&page=1`);\r\n    const popular = await res.json();\r\n\r\n    return {\r\n        popular: popular.results\r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}