{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Aco\\\\Desktop\\\\imdb_clone\\\\pages\\\\movie\\\\[movie_id].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { API } from '../../config/keys';\nimport axios from 'axios';\n\nvar SingleMovie = function SingleMovie(props) {\n  _s();\n\n  var router = useRouter();\n  var movie_id = router.query.movie_id;\n  useEffect(function () {\n    axios.get(\"https://api.themoviedb.org/3/movie/\".concat(movie_id, \"?api_key=\").concat(API, \"&language=en-US\")).then(function (res) {\n      setMovie(res.data);\n    })[\"catch\"](function (err) {\n      console.log(err);\n      setMovie({});\n    });\n  });\n\n  var _useState = useState({}),\n      movie = _useState[0],\n      setMovie = _useState[1];\n\n  var genres = [];\n  movie.genres.map(function (genre) {\n    genres.push(genre.name);\n    return null;\n  });\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, movie.original_title), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, movie.runtime, \" minutes\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, movie.release_date, genres.map(function (genre) {\n    return __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 43\n      }\n    }, genre.name);\n  }))), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, movie.overview), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, movie.popularity), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, movie.vote_count), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, movie.vote_average))));\n};\n\n_s(SingleMovie, \"vdeIu71QxvWhXBrpn2FS7AjjcOw=\", false, function () {\n  return [useRouter];\n});\n\n_c = SingleMovie;\nexport default SingleMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleMovie\");","map":{"version":3,"sources":["C:/Users/Aco/Desktop/imdb_clone/pages/movie/[movie_id].js"],"names":["useEffect","useState","useRouter","API","axios","SingleMovie","props","router","movie_id","query","get","then","res","setMovie","data","err","console","log","movie","genres","map","genre","push","name","original_title","runtime","release_date","overview","popularity","vote_count","vote_average"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA;;AAG3B,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AAH2B,MAInBM,QAJmB,GAIND,MAAM,CAACE,KAJD,CAInBD,QAJmB;AAM3BR,EAAAA,SAAS,CAAC,YAAM;AAEZI,IAAAA,KAAK,CAACM,GAAN,8CAAgDF,QAAhD,sBAAoEL,GAApE,sBACKQ,IADL,CACU,UAAAC,GAAG,EAAI;AACTC,MAAAA,QAAQ,CAACD,GAAG,CAACE,IAAL,CAAR;AACH,KAHL,WAIW,UAAAC,GAAG,EAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAF,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,KAPL;AASH,GAXQ,CAAT;;AAN2B,kBAmBDZ,QAAQ,CAAC,EAAD,CAnBP;AAAA,MAmBpBiB,KAnBoB;AAAA,MAmBbL,QAnBa;;AAqB3B,MAAMM,MAAM,GAAG,EAAf;AAEAD,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,UAAAC,KAAK,EAAI;AACtBF,IAAAA,MAAM,CAACG,IAAP,CAAYD,KAAK,CAACE,IAAlB;AACA,WAAO,IAAP;AACH,GAHD;AAKA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,KAAK,CAACM,cAAX,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIN,KAAK,CAACO,OAAV,aAFJ,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,KAAK,CAACQ,YADX,EAEKP,MAAM,CAACC,GAAP,CAAW,UAAAC,KAAK;AAAA,WAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,KAAK,CAACE,IAAV,CAAL;AAAA,GAAhB,CAFL,CALJ,CADJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,KAAK,CAACS,QAAV,CAZJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIT,KAAK,CAACU,UAAV,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIV,KAAK,CAACW,UAAV,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIX,KAAK,CAACY,YAAV,CAFJ,CAFJ,CAdJ,CADJ;AA2BH,CAvDD;;GAAMzB,W;UAGaH,S;;;KAHbG,W;AAyDN,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { API } from '../../config/keys';\r\nimport axios from 'axios';\r\n\r\nconst SingleMovie = (props) => {\r\n\r\n\r\n    const router = useRouter();\r\n    const { movie_id } = router.query;\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get(`https://api.themoviedb.org/3/movie/${movie_id}?api_key=${API}&language=en-US`)\r\n            .then(res => {\r\n                setMovie(res.data);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setMovie({});\r\n            })\r\n\r\n    })\r\n\r\n    const [movie, setMovie] = useState({});\r\n\r\n    const genres = [];\r\n\r\n    movie.genres.map(genre => {\r\n        genres.push(genre.name);\r\n        return null;\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div>\r\n                    <h3>{movie.original_title}</h3>\r\n                    <p>{movie.runtime} minutes</p>\r\n                </div>\r\n                <div>\r\n                    {movie.release_date}\r\n                    {genres.map(genre => (<p>{genre.name}</p>))}\r\n                </div>\r\n            </div>\r\n\r\n            <p>{movie.overview}</p>\r\n\r\n            <div>\r\n                <p>{movie.popularity}</p>\r\n                <div>\r\n                    <p>{movie.vote_count}</p>\r\n                    <p>{movie.vote_average}</p>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SingleMovie;"]},"metadata":{},"sourceType":"module"}