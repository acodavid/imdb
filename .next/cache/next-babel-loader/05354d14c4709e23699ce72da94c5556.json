{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Aco\\\\Desktop\\\\imdb_clone\\\\pages\\\\upcoming.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Layout from '../components/Layout';\nimport { API } from '../config/keys';\nimport Movies from '../components/movies/Movies';\nimport axios from 'axios';\n\nvar UpcomingMovies = function UpcomingMovies(props) {\n  _s();\n\n  var _useState = useState(''),\n      search = _useState[0],\n      setSearch = _useState[1];\n\n  var _useState2 = useState(''),\n      popular = _useState2[0],\n      setPopular = _useState2[1]; //console.log(props.upcoming)\n\n\n  var onChange = function onChange(e) {\n    setSearch(e.target.value);\n\n    if (e.target.value == '') {\n      axios.get(\"https://api.themoviedb.org/3/movie/upcoming?api_key=\".concat(API, \"&language=en-US&page=1\")).then(function (res) {\n        setPopular(res.data);\n      })[\"catch\"](function (err) {\n        setPopular('');\n      });\n      return;\n    }\n\n    if (search.length > 0) {\n      axios.get(\"https://api.themoviedb.org/3/search/movie?api_key=\".concat(API, \"&language=en-US&page=1&include_adult=false&query=\").concat(search)).then(function (res) {\n        setPopular(res.data);\n      })[\"catch\"](function (err) {\n        setPopular('');\n      });\n    }\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    className: \"type-heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Upcoming Movies\"), __jsx(\"div\", {\n    className: \"search\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    className: \"search-input\",\n    type: \"text\",\n    placeholder: \"Search\",\n    value: search,\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  })), popular !== '' ? __jsx(Movies, {\n    movies: popular.results,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }) : __jsx(Movies, {\n    movies: props.upcoming,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  })));\n};\n\n_s(UpcomingMovies, \"sRpy/ZHSDvehjp1SbmIYAkJ516M=\");\n\n_c = UpcomingMovies;\nUpcomingMovies.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, upcoming;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(\"https://api.themoviedb.org/3/movie/upcoming?api_key=\".concat(API, \"&language=en-US&page=1\"));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          upcoming = _context.sent;\n          return _context.abrupt(\"return\", {\n            upcoming: upcoming.results\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default UpcomingMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpcomingMovies\");","map":{"version":3,"sources":["C:/Users/Aco/Desktop/imdb_clone/pages/upcoming.js"],"names":["useState","Layout","API","Movies","axios","UpcomingMovies","props","search","setSearch","popular","setPopular","onChange","e","target","value","get","then","res","data","err","length","results","upcoming","getInitialProps","fetch","json"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAAA;;AAAA,kBAEFN,QAAQ,CAAC,EAAD,CAFN;AAAA,MAEvBO,MAFuB;AAAA,MAEfC,SAFe;;AAAA,mBAGAR,QAAQ,CAAC,EAAD,CAHR;AAAA,MAGvBS,OAHuB;AAAA,MAGdC,UAHc,kBAI9B;;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,CAAC,EAAI;AAClBJ,IAAAA,SAAS,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;;AAEA,QAAIF,CAAC,CAACC,MAAF,CAASC,KAAT,IAAkB,EAAtB,EAA0B;AACtBV,MAAAA,KAAK,CAACW,GAAN,+DAAiEb,GAAjE,6BACKc,IADL,CACU,UAAAC,GAAG,EAAI;AACTP,QAAAA,UAAU,CAACO,GAAG,CAACC,IAAL,CAAV;AACH,OAHL,WAIW,UAAAC,GAAG,EAAI;AACVT,QAAAA,UAAU,CAAC,EAAD,CAAV;AACH,OANL;AAQA;AACH;;AAED,QAAIH,MAAM,CAACa,MAAP,GAAgB,CAApB,EAAuB;AAEnBhB,MAAAA,KAAK,CAACW,GAAN,6DAA+Db,GAA/D,8DAAsHK,MAAtH,GACKS,IADL,CACU,UAAAC,GAAG,EAAI;AACTP,QAAAA,UAAU,CAACO,GAAG,CAACC,IAAL,CAAV;AACH,OAHL,WAIW,UAAAC,GAAG,EAAI;AACVT,QAAAA,UAAU,CAAC,EAAD,CAAV;AACH,OANL;AAQH;AAEJ,GA3BD;;AA6BA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC,cAAjB;AAAgC,IAAA,IAAI,EAAC,MAArC;AAA4C,IAAA,WAAW,EAAC,QAAxD;AAAiE,IAAA,KAAK,EAAEH,MAAxE;AAAgF,IAAA,QAAQ,EAAEI,QAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,EAKKF,OAAO,KAAK,EAAZ,GACG,MAAC,MAAD;AAAQ,IAAA,MAAM,EAAEA,OAAO,CAACY,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,GAGO,MAAC,MAAD;AAAQ,IAAA,MAAM,EAAEf,KAAK,CAACgB,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARZ,CADJ,CADJ;AAgBH,CAnDD;;GAAMjB,c;;KAAAA,c;AAqDNA,cAAc,CAACkB,eAAf,yEAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACXC,KAAK,+DAAwDtB,GAAxD,4BADM;;AAAA;AACvBe,UAAAA,GADuB;AAAA;AAAA,iBAENA,GAAG,CAACQ,IAAJ,EAFM;;AAAA;AAEvBH,UAAAA,QAFuB;AAAA,2CAItB;AACHA,YAAAA,QAAQ,EAAEA,QAAQ,CAACD;AADhB,WAJsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjC;AASA,eAAehB,cAAf","sourcesContent":["import { useState } from 'react';\r\nimport Layout from '../components/Layout';\r\nimport { API } from '../config/keys';\r\nimport Movies from '../components/movies/Movies';\r\nimport axios from 'axios';\r\n\r\nconst UpcomingMovies = (props) => {\r\n\r\n    const [search, setSearch] = useState('');\r\n    const [popular, setPopular] = useState('');\r\n    //console.log(props.upcoming)\r\n\r\n    const onChange = e => {\r\n        setSearch(e.target.value);\r\n\r\n        if (e.target.value == '') {\r\n            axios.get(`https://api.themoviedb.org/3/movie/upcoming?api_key=${API}&language=en-US&page=1`)\r\n                .then(res => {\r\n                    setPopular(res.data);\r\n                })\r\n                .catch(err => {\r\n                    setPopular('');\r\n                })\r\n\r\n            return;\r\n        }\r\n\r\n        if (search.length > 0) {\r\n\r\n            axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API}&language=en-US&page=1&include_adult=false&query=${search}`)\r\n                .then(res => {\r\n                    setPopular(res.data);\r\n                })\r\n                .catch(err => {\r\n                    setPopular('');\r\n                });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <div>\r\n                <h3 className=\"type-heading\">Upcoming Movies</h3>\r\n                <div className=\"search\">\r\n                    <input className=\"search-input\" type=\"text\" placeholder=\"Search\" value={search} onChange={onChange} />\r\n                </div>\r\n                {popular !== '' ? (\r\n                    <Movies movies={popular.results}></Movies>\r\n                ) : (\r\n                        <Movies movies={props.upcoming}></Movies>\r\n                    )}\r\n            </div>\r\n        </Layout>\r\n    )\r\n\r\n}\r\n\r\nUpcomingMovies.getInitialProps = async function () {\r\n    const res = await fetch(`https://api.themoviedb.org/3/movie/upcoming?api_key=${API}&language=en-US&page=1`);\r\n    const upcoming = await res.json();\r\n\r\n    return {\r\n        upcoming: upcoming.results\r\n    }\r\n}\r\n\r\nexport default UpcomingMovies;"]},"metadata":{},"sourceType":"module"}